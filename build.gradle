/*
 * This file is part of the MyArchiveMobile distribution (https://github.com/domjos1994/MyArchiveMobile).
 * Copyright (c) 2020 Dominic Joas.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

// Top-level build file where you can icon_add configuration options common to all sub-projects/modules.

ext.propVersion = 16
ext.propVersionCode = "0.1.beta.3"

ext.propJavaVersion = "8"

ext.propCompVersion = 29
ext.propMinVersion = 20
ext.propAndroidVersion = "1.1.0"

ext.propJUnitVersion = '4.13'
ext.propJUnitExtVersion = "1.1.1"
ext.propEspressoVersion = "3.2.0"

ext.propDatabaseVersion = "2.1.0"

ext.propMultiDex = true
ext.propMinify = false
ext.propShrink = false

ext.propCustomWidgetsPropertiesPath = "../Libraries/customwidgets/github.properties"
ext.propCustomWidgetsVersion = "2.2"

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
    }
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(new File(projectDir, ext.propCustomWidgetsPropertiesPath)))

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/domjos1994/Customwidgets")
            credentials {
                username = githubProperties['gpr.usr']
                password = githubProperties['gpr.key']
            }
        }
    }

    gradle.projectsEvaluated {
        tasks.withType (JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation"
            options.compilerArgs << "-Xlint:unchecked"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
